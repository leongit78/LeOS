print_hex:
    pusha
    mov cx, 4 ; Счетчик цикла. Записываем 4 символа

; Цикл. За одну итерацию записывает один символ
hex_loop:
    cmp cx, 0 ; Пока не записали все символы 
    je end
    
    dec cx ; декремент счетчика цикла

    mov ax, dx ; копируем dx в ax , чтобы работать с текущим символом отдельно
    shr dx, 4 ; подготавливаем dx для следующей итерации
    
    and ax, 0xf ; Изолируем послений символ 16-ричной записи

    add al, 0x30 ; Добавляем к нему код '0', для перевода в ASCII
    cmp al, 0x39 ; Проверка является символ числом или буквой
    jle set_letter ; Если число сразу записываем его в соотв. место в нашей шаблонной строке HEX_OUT
    add al, 7 ; Если буква, то прибавляем разницу м/у буквами и цифрами в ASCII таблице

set_letter:
    mov bx, HEX_OUT + 2 ; Пропускаем '0x'
    add bx, cx ; Перемещаем указатель на ячейку где должен на ходиться текущий символ в шаблонной строке
    mov [bx], al ; Записываем наш символ в соотв ячейку

    jmp hex_loop ; Повторяем для остальных символов

end:
    ; BX - параметр функции print_string
    mov bx, HEX_OUT
    call print_string

    popa
    ret

; Шаблонная строка
HEX_OUT:
    db '0x0000',0 
